name: Update Calendar

on:
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes
  workflow_dispatch:
  push:
    paths:
      - 'force_update.txt'

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          token: ${{ secrets.PAT_TOKEN }}
          
      - name: Debug info
        run: |
          echo "Current commit:"
          git rev-parse HEAD
          echo "Branch status:"
          git status
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: python3 -m pip install requests icalendar
        
      - name: Git setup
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
        
      - name: Clean calendars
        run: |
          mkdir -p calendars
          rm -rf calendars/*.ics
        
      - name: Run update script
        id: update
        run: |
          # Save state before running script
          git rev-parse HEAD > before_update.txt
          
          # Run the update script
          python3 update_calendar.py
          
          # List generated files
          echo "Generated calendar files:"
          ls -l calendars/
          
      - name: Commit changes
        run: |
          # Stage only calendar files
          git add calendars/*.ics
          
          # Show what would be committed
          echo "Files to be committed:"
          git status --porcelain
          
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Changes detected, committing..."
            git commit -m "Update calendars [skip ci]"
            git push origin HEAD:main
          else
            echo "No changes to commit"
            echo "Before update commit: $(cat before_update.txt)"
            echo "Current commit: $(git rev-parse HEAD)"
            echo "Repository status:"
            git status